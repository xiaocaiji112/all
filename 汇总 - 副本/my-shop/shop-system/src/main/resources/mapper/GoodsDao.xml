<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.dao.GoodsDao">

    <resultMap type="com.shop.entity.Goods" id="GoodsMap">
        <result property="goodsId" column="goods_id" jdbcType="INTEGER"/>
        <result property="goodsName" column="goods_name" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="goodStock" column="good_stock" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="GoodsMap">
        select
          goods_id, goods_name, user_id, good_stock
        from goods
        where goods_id = #{goodsId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="GoodsMap">
        select
          goods_id, goods_name, user_id, good_stock
        from goods
        <where>
            <if test="goods.goodsId != null">
                and goods_id = #{goods.goodsId}
            </if>
            <if test="goods.goodsName != null and goods.goodsName != ''">
                and goods_name = #{goods.goodsName}
            </if>
            <if test="goods.userId != null">
                and user_id = #{goods.userId}
            </if>
            <if test="goods.goodStock != null">
                and good_stock = #{goods.goodStock}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from goods
        <where>
            <if test="goodsId != null">
                and goods_id = #{goodsId}
            </if>
            <if test="goodsName != null and goodsName != ''">
                and goods_name = #{goodsName}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="goodStock != null">
                and good_stock = #{goodStock}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="goodsId" useGeneratedKeys="true">
        insert into goods(goods_name, user_id, good_stock)
        values (#{goodsName}, #{userId}, #{goodStock})
    </insert>

    <insert id="insertBatch" keyProperty="goodsId" useGeneratedKeys="true">
        insert into goods(goods_name, user_id, good_stock)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.goodsName}, #{entity.userId}, #{entity.goodStock})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="goodsId" useGeneratedKeys="true">
        insert into goods(goods_name, user_id, good_stock)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.goodsName}, #{entity.userId}, #{entity.goodStock})
        </foreach>
        on duplicate key update
        goods_name = values(goods_name),
        user_id = values(user_id),
        good_stock = values(good_stock)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update goods
        <set>
            <if test="goodsName != null and goodsName != ''">
                goods_name = #{goodsName},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="goodStock != null">
                good_stock = #{goodStock},
            </if>
        </set>
        where goods_id = #{goodsId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from goods where goods_id = #{goodsId}
    </delete>

</mapper>

