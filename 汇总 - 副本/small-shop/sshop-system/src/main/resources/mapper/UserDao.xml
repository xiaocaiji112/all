<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sshop.dao.UserDao">

    <resultMap type="com.sshop.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap type="com.sshop.entity.BuyForm" id="FormMap">
        <result property="date" column="data" jdbcType="TIMESTAMP"/>
        <result property="status_order" column="status_order" jdbcType="VARCHAR"/>
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
        <result property="userid" column="userid" jdbcType="INTEGER"/>
        <result property="explain_order" column="explain_order" jdbcType="VARCHAR"/>
        <result property="goodnums" column="goodnums" jdbcType="VARCHAR"/>
        <result property="goodid" column="goodid" jdbcType="INTEGER"/>
        <result property="payment" column="payment" jdbcType="VARCHAR"/>
        <result property="recipientaddress" column="recipientaddress" jdbcType="VARCHAR"/>
        <result property="recipientname" column="recipientname" jdbcType="VARCHAR"/>
    </resultMap>

<!--    <insert id="saveForm" keyProperty="id" useGeneratedKeys="true">
        insert into order_form(date, status,id,price,userid,explain,goodnums,goodid,payment,recipientaddress,recipientname)
        values (#{date}, #{status},#{id},#{price},#{userid},#{explain},#{goodnums},#{goodid},#{payment},#{recipientaddress},#{recipientname})
    </insert>-->
    <insert id="saveForm" keyProperty="" useGeneratedKeys="true">
        insert into order_form(recipientname, recipientaddress, payment, goodid, goodnums, explain_order, userid, price, date, status_order, id)
        values (#{recipientname}, #{recipientaddress}, #{payment}, #{goodid}, #{goodnums}, #{explain_order}, #{userid}, #{price}, #{date}, #{status_order}, #{id})
    </insert>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(name, password, role, address)
        values (#{name}, #{password}, #{role}, #{address})
    </insert>
    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          id, name, password, role, address
        from user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
          id, name, password, role, address
        from user
        <where>
            <if test="user.id != null">
                and id = #{id}
            </if>
            <if test="user.name != null and user.name != ''">
                and name = #{user.name}
            </if>
            <if test="user.password != null and user.password != ''">
                and password = #{user.password}
            </if>
            <if test="user.role != null and user.role != ''">
                and role = #{user.role}
            </if>
            <if test="user.address != null and user.address != ''">
                and address = #{user.address}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="role != null and role != ''">
                and role = #{role}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
        </where>
    </select>



    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(name, password, role, address)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.name}, #{entity.password}, #{entity.role}, #{entity.address})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(name, password, role, address)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.password}, #{entity.role}, #{entity.address})
        </foreach>
        on duplicate key update
        name = values(name),
        password = values(password),
        role = values(role),
        address = values(address)
    </insert>


    <!--通过主键修改数据-->
    <update id="update">
        update user
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="role != null and role != ''">
                role = #{role},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from user where id = #{id}
    </delete>

</mapper>

